buildscript {

    ext.android_version = '27.1.1'
    ext.kotlin_version = '1.2.51'
    ext.anko_version = '0.10.4'

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
}


apply plugin: 'com.android.library'

//Kotlin build plugin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'jacoco'

androidExtensions {
    experimental = true
}

ext {
    PUBLISH_GROUP_ID = 'com.nanj.coin'
    PUBLISH_ARTIFACT_ID = 'sdk'
    PUBLISH_VERSION = '1.0'
}

android {
    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //Test
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:1.9.5"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'org.slf4j:slf4j-simple:1.7.21'
    androidTestImplementation('com.android.support.test:runner:1.0.2')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //Kotlin library
    api("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version") {
        exclude group: 'org.jetbrains', module: 'annotations'
    }
    api("org.jetbrains.anko:anko-common:$anko_version") {
        exclude group: 'org.jetbrains', module: 'annotations'
    }
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:0.21"

    //Android library
    api("com.android.support:appcompat-v7:$android_version")
    api('com.google.android.gms:play-services-vision:15.0.1')
    api('com.android.support.constraint:constraint-layout:1.1.0')

    // Document at https://github.com/web3j/web3j
    api('org.web3j:core:3.3.1-android')
    api('com.squareup.retrofit2:retrofit:2.4.0')
    api('com.squareup.retrofit2:adapter-rxjava2:2.4.0')
    api('com.squareup.retrofit2:converter-gson:2.3.0')


    api('com.google.code.gson:gson:2.8.4') { force = true }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

jacoco {
    toolVersion = "0.7.7.201606060606"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/NANJWalletManager.*'
    ]
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/kotlin"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}
//apply from: 'https://raw.githubusercontent.com/blundell/release-android-library/master/android-release-aar.gradle'
